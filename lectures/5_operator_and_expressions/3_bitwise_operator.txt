
    :: Bitwise Operators - AND OR XOR
    เนื่องจาก computer เป็นระบบอีเล็กทรอนิกส์ จึงทำงานเป็นระบบบิตเท่านั้น
    และสามารถทำงานได้รวดเร็วกว่า operator อื่น ๆ
    > AND 
        - symbro: &
    > OR 
        - symbro: |
    > NOT
        - symbro: ~
    > XOR
        - symbro: ^
        - เหมือนกันได้ 0, ต่างกันได้ 1
    > Right Shift
        - symbro: >>
        - เลื่อนบิตไปทางขวา
        ตัวอย่าง
            00001010
             0000101 (0 สุดท้ายหายไปเพราะอยู่นอก 1 byte)
        ส่วนที่เป็นช่องว่างให้เติม 0 ลงไปแทน จะได้ 00000101 โดยมีค่าเป็น 5 (4 + 1)
        - เราสามารถนำมาใช้ประโยชน์ในการคำนวนได้ n >> k จะมีค่าเท่ากับ n / Math.pow(2, k);
    > Unsigned Right Shift 
        - symbro: >>>
    > Left Shift
        - symbro: <<
        - เลื่อนบิตไปทางซ้าย
        ตัวอย่าง
            00001010
           00001010
        ส่วนที่เป็นช่องว่างให้เติม 0 ลงไปแทน จะได้ 000010100 โดยจะมีค่าเป็น 20 (16+4)

    Truth table

    AND (&)
    A   B   A&B
    0   0   0
    0   1   0
    1   0   0
    1   1   1

    OR (|)
    A   B   A|B 
    0   0   0
    0   1   1
    1   0   1   
    1   1   1

    XOR (^)
    A   B   A^B 
    0   0   0   
    0   1   1
    1   0   1
    1   1   0