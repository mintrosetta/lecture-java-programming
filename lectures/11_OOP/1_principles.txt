Principle of Object Oriented Programming:
    เป็นการเลียนแบบวิธีคิดของวัตถุในชีวิตจริง โดยระบุ "สถานะ" และ "พฤติกรรม" สำหรับวัตถุของซอฟต์แวร์
    โดยวัตถุ (object) จะเก็บสถานะใน ฟิล์ด (field) และเปิดเผลพฤติกรรมผ่าน เมธอด (method) โดยที่ 
    method จะดำเนินการกับสถานะภายใน object นั้น

    https://phayao.medium.com/4-%E0%B9%80%E0%B8%AA%E0%B8%B2%E0%B8%AB%E0%B8%A5%E0%B8%B1%E0%B8%81%E0%B8%82%E0%B8%AD%E0%B8%87-object-oriented-programming-247ca02c633b

    หลักการเขียนโปรแกรมเชิงวัตถุประกอบด้วย:
        Abstraction:
            กรรมวิธีกำจัดคุณลักศณะเฉพาะบางอย่างออกไป เพื่อให้เหลือแค่คุณลักษณะที่จำเป็นเท่านั้น
            โดยใน oop คือการซ่อน attribute และ behaviour ทุกอย่างที่ไม่เกี่ยวข้องกับ object 
            เพื่อช่วยลดความซ้ำซ้อน
    
            เป็นการซ่อนรายละเอียดภายใน โดยแสดงแค่คุณสมบัติที่จำเป็นเท่านั้น
            เช่น เมื่อเราจะเปิดทีวี ผู้ใช้ก็แค่รู้ว่าต้องกดปุ่มเพื่อเปิดทีวี แต่ไม่ต้องรู้ว่าวงจร
            ข้างในทีวีทำงานยังไง
        Encapsulation:
            การห่อหุ้ม เป็นการควบคุมหรือปกปิดการเข้าถึงข้อมูลของ object จากภายนอก
        Ingeritance:
            เป็นการสืบทอดคุณสมบัติจาก super class ไปให้ sub class
        Polymorphism:
            การที่ object สามารถมีได้หลายรูปแบบ โดยจะเกิดจากการสิบทอดของ super class
            และยังคงรักษาสภาพและคุณสมบัติของ super class ไว้