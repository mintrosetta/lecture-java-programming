
    :: Integral data type in detail
    Integral type ประกอบด้วย Integer, Floating Point, Character, Boolean

    --- Integer ---
    :: ทำไมเราถึงมี 4 ชนิดข้อมูลที่เป็น integral 
    ตัวอย่างเช่น
        - int มีขนาด 4 byte
        - CPU Processor มี 64-bit
        - ก่อนหน้านั้นเรามี 32-bit
        - ก่อนหน้านั้นเรามี 16-bit
        
        - CPU 64-bit หมายถึง ข้อมูลที่มีขนาดใหญ่ไม่เกิน 64-bit CPU จะสามารถประมวลผลได้
        - หากให้ขนาดของข้อมูลที่ใหญ่เกินจำนวน bit ของ CPU จะทำให้ CPU ต้องเพิ่มรอบในการทำงานเพื่อประมวลผล

    :: note
        - ถ้าหากใช้ CPU 32-bit ประมวลผล int (4-bit) มันจะสามารถทำได้
        - แต่ถ้าเจอขนาดข้อมูลที่เป็น long (8-bit) จะไม่สามารถประมวลผลเสร็จในครั้งเดียว
        ต้องทำหลายขั้นตอน

    :: note 
        - เหตุผลที่มี short และ byte ก็เพื่อรองรับ CPU 16-bit
        - ใน C และ C++ จะมี byte และ short อยู่แล้ว, Java จึงเพิ่มเข้ามาด้วยเพื่อใช้เวลาต้องติดต่อกับ
        software ที่ใช้ C และ C++

    :: 8 bit = 1 byte

    :: เราจะรู้ได้ยังไงว่าเลขนั้นเป็นค่า + หรือ - ?
    - สมมุตว่าเรามีชนิดข้อมูลเป็น byte มี 1 byte (8 bit)
    - เราจะใช้แค่ 7 bit ในการเก็บตัวเลข เช่น [-, 0, 0 ,0 ,0 ,0 ,0 ,0]
    - bit แรกเราเรียกว่า sign bit ใช้เพื่อกำหนดค่าจะเป็น + หรือ - โดย 0 คือ +, 1 คือ -
    - [0, 1, 1, 1, 1, 1, 1, 1] = 127 | [0, 2^6, 2^5, 2^4, 2^3, 2^2, 2, 1] = 127
    - หากเราจัดเก็บค่าติดลบ เราจะใช้ 2 complement 
    - เราต้องการ bit ของ 5 = [0, 0, 0, 0, 0, 1, 0, 1]
    - ทำให้กลายเป็น 1 complement โดยการกลับด้าน bit = [1, 1, 1, 1, 1, 0, 1, 0]
    - จากนั้นนำมา +1 = [1, 1, 1, 1, 1, 0, 1, 0] + 1 = 11111011 จะกลายเป็น 2 complement

    --- Integer ---

    --- Float ---
    - จะไม่เก็บทศนิยมไว้ใน memory
    - จะใช้วิธีแบบนี้ 163.52 -> 16352 * 10^-2 หรือ 16352E-2

    --- Float ---

    :: สามารถใช้ .toBinaryString() ของ wrapper class เพื่อดู bit ของข้อมูลได้